openapi: 3.0.3
info:
  title: components
  description: Title
  version: 1.0.0
paths: { }

components:
  schemas:
    BookGetByNameResponse:
      type: array
      items:
        $ref: '#/components/schemas/BookInfo'

    BookInfo:
      type: object
      required:
        - id
        - name
        - authorId
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: name of a book
        authorId:
          type: string
          format: uuid
          description: foreign key to a book's author

    BookGetByInfoIdResponse:
      type: object
      required:
        - bookInfoId
        - books
      properties:
        bookInfoId:
          type: string
          format: uuid
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          default: []

    BookStatus:
      type: string
      enum:
        - AVAILABLE
        - UNAVAILABLE
      default: 'UNAVAILABLE'

    Book:
      type: object
      required:
        - id
        - publisherId
        - libraryId
        - bookInfoId
        - status
      properties:
        id:
          type: string
          format: uuid
        bookInfoId:
          type: string
          format: uuid
        publisherId:
          type: string
          format: uuid
          description: key to a book publication id
        libraryId:
          type: string
          format: uuid
          description: library this is in
        status:
          $ref: '#/components/schemas/BookStatus'

    BookReserveResponse:
      type: object
      required:
      properties:
        reserved_date:
          type: string
          format: date
        reservation_expiration_date:
          type: string
          format: date

    AuthorDetailsResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: author's name

    UserLoginRequest:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
          description: entered password
        email:
          type: string
          description: user's email with validation

    UserLoginResponse:
      type: object
      required:
        - uid
        - username
        - email
      properties:
        uid:
          type: string
          description: UUID
        username:
          type: string
        email:
          type: string

    LibraryDetailsResponse:
      type: object
      required:
        - id
        - name
        - city
        - street
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          description: library's name
        city:
          type: string
          description: city library located
        street:
          type: string