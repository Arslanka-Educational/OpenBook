openapi: 3.0.3
info:
  title: OpenBook
  description: OpenBook
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'

paths:
  /v1/book/details/{book_id}:
    get:
      tags:
        - Book
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/BookDetailsResponse'
        404:
          $ref: './responses.yaml#/components/responses/404'

  /v1/book/create:
    post:
      tags:
        - Book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions.yaml#/components/schemas/BookCreateRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/BookDetailsResponse'

  /v1/author/details/{author_id}:
    get:
      tags:
        - Author
      parameters:
        - in: path
          name: author_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/AuthorDetailsResponse'
        404:
          $ref: './responses.yaml#/components/responses/404'

  /v1/author/create:
    post:
      tags:
        - Author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions.yaml#/components/schemas/AuthorCreateRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/AuthorDetailsResponse'

  /v1/library/details/{library_id}:
    get:
      tags:
        - Library
      parameters:
        - in: path
          name: library_id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/LibraryDetailsResponse'
        404:
          $ref: './responses.yaml#/components/responses/404'

  /v1/library/create:
    post:
      tags:
        - Library
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './definitions.yaml#/components/schemas/LibraryCreateRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: './definitions.yaml#/components/schemas/LibraryDetailsResponse'